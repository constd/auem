# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: GitHub CI-CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/auem
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.9
        mamba-version: "*"
        use-mamba: true
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: electraud
    - name: Set cache date
      run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
    - uses: actions/cache@v2
      with:
        path: ${{ matrix.prefix }}
        key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ hashFiles('pyproject.toml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
      id: cache
    - name: Update environment
      run: mamba env update -n electraud -f environment.yml
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: false
        virtualenvs-in-project: false
        virtualenvs-path: ${{ matrix.prefix }}
        installer-parallel: true
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Install pip requirements
      run: poetry install --no-interaction --no-dev
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Install torch without cuda
      run: |
        poe force-nocuda
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Test with pytest
      run: |
        poetry run pytest
